
import Immutable from 'immutable';

const dataKey = Symbol("data");
const stateKey = Symbol("states");
const msgKey = Symbol("messages");
const schemaKey = Symbol("schema");

function getNextState(state, msg) {

}

function deriveState(msgs, init) {
  msgs.reduce((a, b) => getNextState(a, b), init);
}

class Store {
  constructor(schema) {
    this[dataKey] = new Immutable.Map();
    this[msgKey] = new Immutable.List();
    this[stateKey] = [];
    this[schemaKey] = Immutable.fromJS(schema);
  }
  get data() {
    return this[dataKey];
  }
  get messages() {
    return this[msgKey];
  }
  get schema() {
    return this[schemaKey];
  }
  handleMessage(msg) {
    let state = getNextState(msg, this.data);
    
  }
}

export {Store as default};
