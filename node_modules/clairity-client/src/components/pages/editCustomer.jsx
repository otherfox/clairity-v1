import React from 'react'
import Layout from  '../layout'
import Footer from  '../footer'
import TopNav from '../topnav'
import LeftNav from '../leftnav'
import Content from '../content'
import {
  RadioButtonGroup,
  RadioButton,
  Checkbox,
  FlatButton,
  RaisedButton,
  FloatingActionButton,
  IconButton,
  Toggle,
  Slider,
  DropDownMenu,
  DatePicker,
  TextField,
  Paper
} from 'material-ui'

import {List, fromJS} from 'immutable'
import {requestLocationById} from '../../actions/location'
import {getById} from '../../queries/locations'
// Dropdown Menu Data

var typeItems = [
  { payload: '1', text: 'Business' },
  { payload: '2', text: 'Residential' },
  { payload: '3', text: 'Telenational - Business' },
  { payload: '4', text: 'Telenational - Residential' }
];

var locationItems = [
  { payload: '1', text: '1845 Oil Field Services' },
  { payload: '2', text: '150 Capital Ave, Atlanta GA' },
];

var typeItems = [
   { payload: '1', text: 'Type' },
   { payload: '2', text: 'Month-to-Month' },
   { payload: '3', text: 'One-time Event' },
   { payload: '4', text: 'Standard - Downgrade' },
   { payload: '5', text: 'Standard - New Install' },
   { payload: '6', text: 'Standard - Renewal' },
   { payload: '7', text: 'Standard - Upgrade' }
];

var salesItems = [
   { payload: '1', text: 'Sales Agent' },
   { payload: '2', text: 'Demo Employee' },
   { payload: '3', text: 'Andrew Solomon' },
   { payload: '4', text: 'Brad Hackett' },
   { payload: '5', text: 'Chriss Meadows' }
];

var serviceItems = [
   { payload: '1', text: 'Choose a service ...' },
   { payload: '2', text: 'Demo Employee' },
   { payload: '3', text: 'Andrew Solomon' },
   { payload: '4', text: 'Brad Hackett' },
   { payload: '5', text: 'Chriss Meadows' }
];

// React Renders
export default class CreateLocation extends React.Component {
  constructor() {
    super();
    this.state = {
      location: {}
    };
  }
  updateState() {
    let data = this.getState();
    if(data) {
      this.setState({location: data.toJS()});
    }
  }
  getState() {
    return getById(this.getLocationId());
  }
  getLocationId() {
    let {router} = this.context;
    return Number(router.getCurrentParams().locationId);
  }
  componentWillMount() {
    requestLocationById(this.getLocationId());
  }
  componentDidMount() {
    this.updateState();
    Store.on('update', () => this.updateState());
  }
  handleCustomerChange(event) {
    let customer = this.state.location.customer;
    customer[event.target.name] = event.target.value;
    location.customer = customer;
    this.setState({location});
  }
  handleCustomerCheck(event) {
    let customer = this.state.location.customer;
    customer[event.target.name] = event.target.checked;
    location.customer = customer;
    this.setState({location});
  }
  render() {
    let location = this.state.location;
    let customer = location.customer || {};
    return (
      <div>
        <TopNav />
        <Layout type="main">
          <LeftNav />
          <Content>
            <Layout>
              <div className="section-header">
                <h1>Edit Customer Location</h1>
              </div>
              <Paper zDepth={1} rounded={true}>
                <Layout widths={{ lg: [6, 6], md: [12, 12], sm: [12, 12], xs: [12, 12]}} cPadding={'0 20px 20px 20px'}>
                  <div>
                    <h4>Customer(Billing) Details</h4>
                    <DropDownMenu menuItems={typeItems} />
                    <Layout widths={{ lg: [12,6,6,12,6,6,4,4,4], md: [12,6,6,12,6,6,4,4,4], sm: [12,6,6,12,6,6,4,4,4], xs: [12,6,6,12,6,6,4,4,4]}}>
                      <TextField
                        name="name"
                        value={customer.name}
                        onChange={this.handleCustomerChange.bind(this)}
                        floatingLabelText="Name" />
                      <TextField
                        name="street1"
                        value={customer.street1}
                        onChange={this.handleCustomerChange.bind(this)}
                        floatingLabelText="Street 1" />
                      <TextField
                        name="street2"
                        value={customer.street2}
                        onChange={this.handleCustomerChange.bind(this)}
                        floatingLabelText="Street 2" />
                      <TextField
                        name="city"
                        value={customer.city}
                        onChange={this.handleCustomerChange.bind(this)}
                        floatingLabelText="City" />
                      <TextField
                        name="state"
                        value={customer.state}
                        onChange={this.handleCustomerChange.bind(this)}
                        floatingLabelText="State" />
                      <TextField
                        name="zip_code"
                        value={customer.zip_code}
                        onChange={this.handleCustomerChange.bind(this)}
                        floatingLabelText="Zip Code" />
                      <TextField
                        name="reference_num"
                        value=""
                        onChange={this.handleCustomerChange.bind(this)}
                        floatingLabelText="Reference #" />
                      <TextField
                        name="attn"
                        value=""
                        onChange={this.handleCustomerChange.bind(this)}
                        floatingLabelText="Attn" />
                      <TextField
                        name="legacy_account_num"
                        value=""
                        onChange={this.handleCustomerChange.bind(this)}
                        floatingLabelText="Legacy Account #" />
                    </Layout>
                    <Layout widths={{ lg: [6,6,6,6,6,6,6,6], md: [6,6,6,6,6,6,6,6], sm: [6,6,6,6,6,6,6,6], xs: [6,6,6,6,6,6,6,6]}} pPadding={"20px 0"}>
                      <Checkbox
                        name="tax_exempt"
                        checked={customer.tax_exempt}
                        onCheck={this.handleCustomerCheck.bind(this)}
                        label="Tax Exempt" />
                      <Checkbox
                        name="summary_billing"
                        checked={customer.summary_billing}
                        onCheck={this.handleCustomerCheck.bind(this)}
                        label="Summary Billing" />
                      <Checkbox
                        name="show_international"
                        checked={customer.show_international}
                        onCheck={this.handleCustomerCheck.bind(this)}
                        label="Show International Calls" />
                      <Checkbox
                        name="show_long_distance"
                        checked={customer.show_long_distance}
                        onCheck={this.handleCustomerCheck.bind(this)}
                        label="Show long Distance Calls" />
                      <Checkbox
                        name="email_invoice"
                        checked={customer.email_invoice}
                        onCheck={this.handleCustomerCheck.bind(this)}
                        label="Email Invoice" />
                      <Checkbox
                        name="invoice_weekly"
                        checked={customer.invoice_weekly}
                        onCheck={this.handleCustomerCheck.bind(this)}
                        label="Invoice Weekly" />
                      <Checkbox
                        name="vip"
                        value="vip"
                        checked={customer.vip}
                        onCheck={this.handleCustomerCheck.bind(this)}
                        label="VIP" />
                      <Checkbox
                        name="auto_pay"
                        checked={customer.auto_pay}
                        onCheck={this.handleCustomerCheck.bind(this)}
                        label="Auto Pay" />
                    </Layout>
                  </div>
                  <div>
                    <h4>Service Location</h4>
                    <Layout widths={{ lg: [12,12,12,6,6,12,6,6,4,4,4], md: [12,12,12,12,12,12,12], sm: [12,12,12,12,12,12,12], xs: [12,12,12,12,12,12,12]}}>
                      <TextField
                        defaultValue=""
                        floatingLabelText="Name" />
                      <Checkbox
                        name="taxExempt"
                        value="taxExempt"
                        label="Tax Exempt" />
                      <Checkbox
                        name="taxExempt"
                        value="taxExempt"
                        label="Same as Customer Address" />
                      <TextField
                        defaultValue=""
                        floatingLabelText="Street 1" />
                      <TextField
                        defaultValue=""
                        floatingLabelText="Street 2" />
                      <TextField
                        defaultValue=""
                        floatingLabelText="City" />
                      <TextField
                        defaultValue=""
                        floatingLabelText="State" />
                      <TextField
                        defaultValue=""
                        floatingLabelText="Zip Code" />
                      <TextField
                        defaultValue=""
                        floatingLabelText="Reference #" />
                      <TextField
                        defaultValue=""
                        floatingLabelText="Legacy Account #" />
                      <TextField
                        defaultValue=""
                        floatingLabelText="Order Index" />
                    </Layout>
                  </div>
                </Layout>
              </Paper>
              <Layout pPadding={"10px 0"}>
                <RaisedButton label="Submit" primary={true} />
              </Layout>
            </Layout>
          </Content>
        </Layout>
        <Footer />
      </div>
    );
  }
}

CreateLocation.contextTypes = {
      router: React.PropTypes.func
    };
